{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://github.com/ammpio/edge-schema/raw/main/driver.schema.json",
  "type": "object",
  "title": "Driver schema",
  "required": ["fields"],
  "properties": {
    "common": {
      "type": "object",
      "default": {},
      "title": "Common parameters for each field",
      "properties": {
        "fncode": {
          "type": "integer",
          "default": 3,
          "title": "Modbus function code",
          "examples": [3, 4]
        },
        "words": {
          "type": "integer",
          "title": "Number of 2-byte words for Modbus",
          "examples": [2]
        },
        "datatype": {
          "type": "string",
          "enum": [
            "int16",
            "uint16",
            "int32",
            "uint32",
            "int64",
            "uint64",
            "float",
            "double"
          ],
          "title": "Source type of data being read",
          "examples": ["int16"]
        },
        "typecast": {
          "type": "string",
          "enum": ["int", "float", "str", "bool"],
          "title": "Typecast for final processed reading",
          "examples": ["int"]
        }
      },
      "examples": [
        {
          "fncode": 4,
          "words": 2,
          "datatype": "float"
        }
      ]
    },
    "fields": {
      "type": "object",
      "title": "Fields to be read",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "register": {
            "type": "integer",
            "title": "Modbus start register"
          },
          "words": {
            "type": "integer",
            "title": "Number of 2-byte words for Modbus",
            "examples": [2]
          },
          "fncode": {
            "type": "integer",
            "default": 3,
            "title": "Modbus function code",
            "examples": [3, 4]
          },
          "datatype": {
            "type": "string",
            "enum": [
              "int16",
              "uint16",
              "int32",
              "uint32",
              "int64",
              "uint64",
              "float",
              "double"
            ],
            "title": "Source type of data being read",
            "examples": ["int16"]
          },
          "typecast": {
            "type": "string",
            "enum": ["int", "float", "str", "bool"],
            "title": "Typecast for final processed reading",
            "examples": ["int"]
          },
          "multiplier": {
            "type": "number",
            "title": "Reading multiplier (applied before offset)"
          },
          "offset": {
            "type": "number",
            "title": "Reading offset (applied after multiplier)"
          },
          "datamap": {
            "type": "object",
            "title": "Mapping between source and final value"
          },
          "unit": {
            "type": "string",
            "title": "Unit of reading (not used for data processing)"
          },
          "description": {
            "type": "string",
            "title": "Description of reading (not used for data processing)"
          }
        }
      }
    },
    "status_info": {
      "type": "object",
      "title": "Mapping of status info key to content and level",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "title": "Content for the status info",
            "examples": ["Low Oil Pressure", "High Temperature"]
          },
          "register": {
            "type": "integer",
            "title": "Modbus register for the status info"
          },
          "start_bit": {
            "type": "integer",
            "title": "Start bit (within the register) for the status info, first=1"
          },
          "length_bits": {
            "type": "integer",
            "title": "Length in bits for the status info"
          },
          "order": {
            "type": "string",
            "title": "Bit order",
            "description": "Bit order within the register, msr=most significant bit first, lsr=least significant bit first",
            "enum": ["msr", "lsr"],
            "default": "msr"
          },
          "status_level_value_map": {
            "type": "array",
            "title": "Mapping between value and status level",
            "description": "List of pairs that defines how to map a value to a status level (0=OK, 4=Critical)",
            "items": {
              "type": "array",
              "items": [
                { "type": "integer", "title": "Value" },
                {
                  "type": "integer",
                  "title": "Numeric Status Level",
                  "enum": [0, 1, 2, 3, 4]
                }
              ],
              "minItems": 2,
              "maxItems": 2
            },
            "examples": [
              [
                [0, 0],
                [1, 3]
              ]
            ]
          }
        }
      }
    }
  }
}
